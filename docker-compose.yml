version: '3.8'

services:
  # Database
  postgres:
    image: postgres:14-alpine
    container_name: gasconnect-postgres
    environment:
      POSTGRES_DB: gasconnect
      POSTGRES_USER: gasconnect
      POSTGRES_PASSWORD: gasconnect_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - gasconnect-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gasconnect"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: gasconnect-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gasconnect-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: gasconnect-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: gasconnect
      RABBITMQ_DEFAULT_PASS: gasconnect_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - gasconnect-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Authentication Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: gasconnect-auth
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://gasconnect:gasconnect_password@postgres:5432/gasconnect
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://gasconnect:gasconnect_password@rabbitmq:5672
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - gasconnect-network
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Orders Service
  orders-service:
    build:
      context: ./services/orders-service
      dockerfile: Dockerfile
    container_name: gasconnect-orders
    environment:
      NODE_ENV: development
      PORT: 3002
      DATABASE_URL: postgresql://gasconnect:gasconnect_password@postgres:5432/gasconnect
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://gasconnect:gasconnect_password@rabbitmq:5672
      AUTH_SERVICE_URL: http://auth-service:3001
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - gasconnect-network
    volumes:
      - ./services/orders-service:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Supplier Service
  supplier-service:
    build:
      context: ./services/supplier-service
      dockerfile: Dockerfile
    container_name: gasconnect-supplier
    environment:
      NODE_ENV: development
      PORT: 3003
      DATABASE_URL: postgresql://gasconnect:gasconnect_password@postgres:5432/gasconnect
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://gasconnect:gasconnect_password@rabbitmq:5672
      AUTH_SERVICE_URL: http://auth-service:3001
    ports:
      - "3003:3003"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    networks:
      - gasconnect-network
    volumes:
      - ./services/supplier-service:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # API Gateway (Nginx)
  nginx:
    build:
      context: ./infrastructure/nginx
      dockerfile: Dockerfile
    container_name: gasconnect-gateway
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - auth-service
      - orders-service
      - supplier-service
    networks:
      - gasconnect-network
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./infrastructure/nginx/ssl:/etc/nginx/ssl

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  gasconnect-network:
    driver: bridge
