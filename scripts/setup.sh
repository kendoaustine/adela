#!/bin/bash

# GasConnect Backend Setup Script
set -e

echo "üöÄ Setting up GasConnect Backend..."

# Check if Docker is installed
if ! command -v docker &> /dev/null; then
    echo "‚ùå Docker is not installed. Please install Docker first."
    exit 1
fi

# Check if Docker Compose is installed
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå Docker Compose is not installed. Please install Docker Compose first."
    exit 1
fi

# Create .env file if it doesn't exist
if [ ! -f .env ]; then
    echo "üìù Creating .env file from template..."
    cp .env.example .env
    echo "‚úÖ .env file created. Please update it with your configuration."
else
    echo "‚úÖ .env file already exists."
fi

# Create necessary directories
echo "üìÅ Creating necessary directories..."
mkdir -p logs uploads infrastructure/nginx/ssl

# Generate self-signed SSL certificates for development
if [ ! -f infrastructure/nginx/ssl/cert.pem ]; then
    echo "üîê Generating self-signed SSL certificates for development..."
    openssl req -x509 -newkey rsa:4096 -keyout infrastructure/nginx/ssl/key.pem -out infrastructure/nginx/ssl/cert.pem -days 365 -nodes -subj "/C=US/ST=State/L=City/O=GasConnect/CN=localhost"
    echo "‚úÖ SSL certificates generated."
fi

# Build Docker images
echo "üèóÔ∏è  Building Docker images..."
docker-compose build

# Start services
echo "üöÄ Starting services..."
docker-compose up -d postgres redis rabbitmq

# Wait for services to be ready
echo "‚è≥ Waiting for services to be ready..."
sleep 30

# Run database migrations
echo "üóÑÔ∏è  Running database migrations..."
docker-compose run --rm auth-service npm run migrate || echo "‚ö†Ô∏è  Auth service migrations failed or not yet implemented"
docker-compose run --rm orders-service npm run migrate || echo "‚ö†Ô∏è  Orders service migrations failed or not yet implemented"
docker-compose run --rm supplier-service npm run migrate || echo "‚ö†Ô∏è  Supplier service migrations failed or not yet implemented"

# Seed database with sample data
echo "üå± Seeding database with sample data..."
docker-compose run --rm auth-service npm run seed || echo "‚ö†Ô∏è  Auth service seeding failed or not yet implemented"
docker-compose run --rm orders-service npm run seed || echo "‚ö†Ô∏è  Orders service seeding failed or not yet implemented"
docker-compose run --rm supplier-service npm run seed || echo "‚ö†Ô∏è  Supplier service seeding failed or not yet implemented"

# Start all services
echo "üöÄ Starting all services..."
docker-compose up -d

# Wait for services to be fully ready
echo "‚è≥ Waiting for all services to be ready..."
sleep 30

# Health check
echo "üè• Performing health checks..."
if curl -f http://localhost/health > /dev/null 2>&1; then
    echo "‚úÖ API Gateway is healthy"
else
    echo "‚ùå API Gateway health check failed"
fi

if curl -f http://localhost:3001/health > /dev/null 2>&1; then
    echo "‚úÖ Auth Service is healthy"
else
    echo "‚ùå Auth Service health check failed"
fi

if curl -f http://localhost:3002/health > /dev/null 2>&1; then
    echo "‚úÖ Orders Service is healthy"
else
    echo "‚ùå Orders Service health check failed"
fi

if curl -f http://localhost:3003/health > /dev/null 2>&1; then
    echo "‚úÖ Supplier Service is healthy"
else
    echo "‚ùå Supplier Service health check failed"
fi

echo ""
echo "üéâ GasConnect Backend setup complete!"
echo ""
echo "üìã Service URLs:"
echo "   API Gateway: http://localhost"
echo "   Auth Service: http://localhost:3001"
echo "   Orders Service: http://localhost:3002"
echo "   Supplier Service: http://localhost:3003"
echo "   RabbitMQ Management: http://localhost:15672 (gasconnect/gasconnect_password)"
echo ""
echo "üìñ API Documentation:"
echo "   Auth API: http://localhost:3001/api/docs"
echo "   Orders API: http://localhost:3002/api/docs"
echo "   Supplier API: http://localhost:3003/api/docs"
echo ""
echo "üîß Useful commands:"
echo "   View logs: docker-compose logs -f"
echo "   Stop services: docker-compose down"
echo "   Restart services: docker-compose restart"
echo "   Clean up: docker-compose down -v --remove-orphans"
